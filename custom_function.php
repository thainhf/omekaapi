<?phpfunction cal_curl_api($api_url){    $curl = curl_init($api_url);    curl_setopt($curl, CURLOPT_URL, $api_url);    curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);    $headers = array(        "REST-API-Key: 1111",    );    curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);    //for debug only!    curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, false);    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);    $resp = curl_exec($curl);    curl_close($curl);    //var_dump($resp);    $words_f = ["o:", "dcterms:", ":tag", "o-module-folksonomy", "@value"];    $words_r   = ["o_", "dcterms_", "_tag", "o_module_folksonomy", "a_value"];    $resp = str_replace($words_f,$words_r,$resp);    $json_obj    = json_decode($resp);    return $json_obj;}function convert_date_yyyy_mm_dd($vdate){    $find = '/';    $replacement = '-';    $date_set = str_replace($find, $replacement, $vdate);    $date_array = explode('-', $date_set);    //var_dump($resp);    $arrLength = count($date_array);    //    echo $date_set."|<br>";//        echo "<pre>999=";//                    print_r($date_array);//                    echo "</pre>";    $vdate_all="";    if($arrLength>0){        if($arrLength==3){            $yyyy1=$date_array[0];            //  echo "|=>".$yyyy1."|<br>";            $yyyy= intval($yyyy1);            if($yyyy>2500){                $yyyy=$yyyy-543;            }            $mm= $date_array[1];            $dd= $date_array[2];            $vdate_all=$yyyy.'-'.$mm.'-'.$dd;        }elseif ($arrLength==2){            $yyyy= intval(trim($date_array[0]));            if($yyyy>2500){                $yyyy=$yyyy-543;            }            $mm= $date_array[1];            $dd= "01";            $vdate_all=$yyyy.'-'.$mm.'-'.$dd;        }else{            $yyyy= intval($date_array[0]);            if($yyyy>2500){                $yyyy=$yyyy-543;            }            $mm= "01";            $dd= "01";            $vdate_all=$yyyy.'-'.$mm.'-'.$dd;        }    }    return $vdate_all;}function isValidYoutubeURL($url){    $rx = '~                                  ^(?:https?://)?                           # Optional protocol                                   (?:www[.])?                              # Optional sub-domain                                   (?:youtube[.]com/watch[?]v=|youtu[.]be/) # Mandatory domain name (w/ query string in .com)                                   ([^&]{11})                               # Video id of 11 characters as capture group 1                                    ~x';    $has_match = preg_match($rx, $url, $matches);    if($has_match==0){        return false;    }else{        // Let's check the host first        $parse = parse_url($url);        $host = $parse['host'];        if (!in_array($host, array('youtube.com', 'www.youtube.com'))) {            return false;        }        $ch = curl_init();        $oembedURL = 'www.youtube.com/oembed?url=' . urlencode($url).'&format=json';        curl_setopt($ch, CURLOPT_URL, $oembedURL);        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);        // Silent CURL execution        $output = curl_exec($ch);        unset($output);        $info = curl_getinfo($ch);        curl_close($ch);        if ($info['http_code'] !== 404)            return true;        else            return false;    }}?>